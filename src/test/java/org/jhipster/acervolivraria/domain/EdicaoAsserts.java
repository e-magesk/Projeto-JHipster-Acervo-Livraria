package org.jhipster.acervolivraria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EdicaoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEdicaoAllPropertiesEquals(Edicao expected, Edicao actual) {
        assertEdicaoAutoGeneratedPropertiesEquals(expected, actual);
        assertEdicaoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEdicaoAllUpdatablePropertiesEquals(Edicao expected, Edicao actual) {
        assertEdicaoUpdatableFieldsEquals(expected, actual);
        assertEdicaoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEdicaoAutoGeneratedPropertiesEquals(Edicao expected, Edicao actual) {
        assertThat(expected)
            .as("Verify Edicao auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEdicaoUpdatableFieldsEquals(Edicao expected, Edicao actual) {
        assertThat(expected)
            .as("Verify Edicao relevant properties")
            .satisfies(e -> assertThat(e.getEditora()).as("check editora").isEqualTo(actual.getEditora()))
            .satisfies(e -> assertThat(e.getDataLancamento()).as("check dataLancamento").isEqualTo(actual.getDataLancamento()))
            .satisfies(e ->
                assertThat(e.getQuantidadeExemplares()).as("check quantidadeExemplares").isEqualTo(actual.getQuantidadeExemplares())
            )
            .satisfies(e -> assertThat(e.getPreco()).as("check preco").isEqualTo(actual.getPreco()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEdicaoUpdatableRelationshipsEquals(Edicao expected, Edicao actual) {
        assertThat(expected)
            .as("Verify Edicao relationships")
            .satisfies(e -> assertThat(e.getPosicao()).as("check posicao").isEqualTo(actual.getPosicao()))
            .satisfies(e -> assertThat(e.getLivro()).as("check livro").isEqualTo(actual.getLivro()));
    }
}
