package org.jhipster.acervolivraria.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VendaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendaAllPropertiesEquals(Venda expected, Venda actual) {
        assertVendaAutoGeneratedPropertiesEquals(expected, actual);
        assertVendaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendaAllUpdatablePropertiesEquals(Venda expected, Venda actual) {
        assertVendaUpdatableFieldsEquals(expected, actual);
        assertVendaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendaAutoGeneratedPropertiesEquals(Venda expected, Venda actual) {
        assertThat(expected)
            .as("Verify Venda auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendaUpdatableFieldsEquals(Venda expected, Venda actual) {
        assertThat(expected)
            .as("Verify Venda relevant properties")
            .satisfies(e -> assertThat(e.getQuantidade()).as("check quantidade").isEqualTo(actual.getQuantidade()))
            .satisfies(e -> assertThat(e.getPrecoVenda()).as("check precoVenda").isEqualTo(actual.getPrecoVenda()))
            .satisfies(e -> assertThat(e.getValorTotal()).as("check valorTotal").isEqualTo(actual.getValorTotal()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVendaUpdatableRelationshipsEquals(Venda expected, Venda actual) {
        assertThat(expected)
            .as("Verify Venda relationships")
            .satisfies(e -> assertThat(e.getEdicao()).as("check edicao").isEqualTo(actual.getEdicao()));
    }
}
