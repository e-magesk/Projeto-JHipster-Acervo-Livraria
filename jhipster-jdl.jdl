
entity Livro {
	titulo String required
    genero Genero
}

entity Edicao {
	editora String required
    dataLancamento LocalDate required
    quantidadeExemplares Integer required
    preco Float required
}

entity Autor {
	nome String
    nacionalidade Nacionalidade
}

entity Posicao {
	codigo String required pattern(/^[A-Z][0-9]\-[0-9]+\-[a-z][0-9]+$/)
    // Exemplo código
    // A2-7-s0
    // Seção-Estante-Subseção na estante
}

entity Venda {
	quantidade Integer required
    precoVenda Float required
    valorTotal Float
}

entity Compra {
	quantidade Integer required
    precoCompra Float required
    valorTotal Float
}

enum Genero {
	INFANTIL,
	TERROR, 
    FANTASIA,
    ROMANCE,
    BIOGRAFIA,
    AUTOAJUDA
}

enum Nacionalidade {
	ALEMANHA,
    BRASIL, 
    CHILE,
    DINAMARCA,
    FRANCA,
    INGLATERRA
}

relationship OneToMany {
	Livro{edicao} to Edicao{livro(titulo)}
}

relationship ManyToOne {
	Venda{edicao} to Edicao,
    Compra{edicao} to Edicao
}

relationship ManyToMany{
	Livro{autor(nome)} to Autor{livro(titulo)}
}

relationship OneToOne {
	Edicao{posicao(codigo)} to Posicao
}

// Set pagination options
paginate Livro, Autor, Venda, Compra, Edicao with pagination
paginate Posicao with infinite-scroll

// Use Data Transfer Objects (DTO)
// dto * with mapstruct

// Set service options to all except few
service all with serviceImpl

// Set an angular suffix
// angularSuffix * with mySuffix
